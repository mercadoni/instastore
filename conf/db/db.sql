ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'secret';
flush privileges;

-- MySQL Script generated by MySQL Workbench
-- Mon Jan 18 17:02:42 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema instastore
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `instastore` ;

-- -----------------------------------------------------
-- Schema instastore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `instastore` DEFAULT CHARACTER SET utf8 ;
USE `instastore` ;

-- -----------------------------------------------------
-- Table `instastore`.`Store`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `instastore`.`Store` ;

CREATE TABLE IF NOT EXISTS `instastore`.`Store` (
  `StoreId` INT NOT NULL AUTO_INCREMENT,
  `StoreName` VARCHAR(45) NULL,
  `CoordinateLatitude` DOUBLE NULL,
  `CoordinateLongitude` DOUBLE NULL,
  PRIMARY KEY (`StoreId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `instastore`.`Schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `instastore`.`Schedule` ;

CREATE TABLE IF NOT EXISTS `instastore`.`Schedule` (
  `ScheduleId` INT NOT NULL AUTO_INCREMENT,
  `StoreId` INT NOT NULL,
  `WeekDay` TINYINT NOT NULL,
  `StartsAt` TIME NULL,
  `EndsAt` TIME NULL,
  PRIMARY KEY (`ScheduleId`, `StoreId`),
  INDEX `fk_Schedule_Store_idx` (`StoreId` ASC) VISIBLE,
  CONSTRAINT `fk_Schedule_Store`
    FOREIGN KEY (`StoreId`)
    REFERENCES `instastore`.`Store` (`StoreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `instastore`.`Delivery`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `instastore`.`Delivery` ;

CREATE TABLE IF NOT EXISTS `instastore`.`Delivery` (
  `DeliveryId` INT NOT NULL AUTO_INCREMENT,
  `StoreId` INT NOT NULL,
  `WeekDay` TINYINT NULL,
  `StartsAt` TIME NULL,
  `EndsAt` TIME NULL,
  `Capacity` INT NULL,
  PRIMARY KEY (`DeliveryId`, `StoreId`),
  INDEX `fk_Delivery_Store1_idx` (`StoreId` ASC) VISIBLE,
  CONSTRAINT `fk_Delivery_Store1`
    FOREIGN KEY (`StoreId`)
    REFERENCES `instastore`.`Store` (`StoreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `instastore`.`Order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `instastore`.`Order` ;

CREATE TABLE IF NOT EXISTS `instastore`.`Order` (
  `OrderId` INT NOT NULL AUTO_INCREMENT,
  `DeliveryId` INT NOT NULL,
  `DeliveryDate` DATE NULL,
  PRIMARY KEY (`OrderId`, `DeliveryId`),
  INDEX `fk_Order_Delivery1_idx` (`DeliveryId` ASC) VISIBLE,
  CONSTRAINT `fk_Order_Delivery1`
    FOREIGN KEY (`DeliveryId`)
    REFERENCES `instastore`.`Delivery` (`DeliveryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

USE instastore;

INSERT INTO Store ( StoreName, CoordinateLatitude, CoordinateLongitude ) VALUES 
("Instastore Chapinero",      4.654785762862241,  -74.05578614891417),
("Instastore Engativá",       4.711543761226306,  -74.11313411769943),
("Instastore Bucaramanga",    7.117868334978774,  -73.11107685466604),
("Instastore Barrios Unidos", 4.673915288066488,  -74.06346781843864),
("Instastore Kennedy",        4.609393346720635,  -74.15202185751941),
("Instastore Cartagena",      10.398395548795275, -75.5614983607275),
("Instastore Barranquilla",   10.992250418883538, -74.81068998503024),
("Instastore Santa Marta",    11.157870079944303, -74.22320614933257),
("Instastore Fontibón",       4.672304296414278,  -74.14532893043037);

INSERT INTO `instastore`.`Schedule` ( StoreId, WeekDay, StartsAt, EndsAt )  VALUES
(1, 2, "008:00:00", "017:00:00"),
(1, 3, "008:00:00", "017:00:00"),
(1, 4, "008:00:00", "017:00:00"),
(1, 5, "008:00:00", "017:00:00"),
(1, 6, "008:00:00", "017:00:00"),
(1, 7, "009:00:00", "014:00:00"),
(2, 2, "008:00:00", "017:00:00"),
(2, 3, "008:00:00", "017:00:00"),
(2, 4, "008:00:00", "017:00:00"),
(2, 5, "008:00:00", "017:00:00"),
(2, 6, "008:00:00", "017:00:00"),
(2, 7, "009:00:00", "014:00:00"),
(3, 2, "007:00:00", "017:00:00"),
(3, 3, "007:00:00", "017:00:00"),
(3, 4, "007:00:00", "017:00:00"),
(3, 5, "007:00:00", "017:00:00"),
(3, 6, "007:00:00", "017:00:00"),
(3, 7, "007:00:00", "012:00:00"),
(3, 1, "007:00:00", "012:00:00"),
(4, 2, "008:00:00", "017:00:00"),
(4, 3, "008:00:00", "017:00:00"),
(4, 4, "008:00:00", "017:00:00"),
(4, 5, "008:00:00", "017:00:00"),
(4, 6, "008:00:00", "017:00:00"),
(4, 7, "009:00:00", "014:00:00"),
(5, 2, "008:00:00", "017:00:00"),
(5, 3, "008:00:00", "017:00:00"),
(5, 4, "008:00:00", "017:00:00"),
(5, 5, "008:00:00", "017:00:00"),
(5, 6, "008:00:00", "017:00:00"),
(5, 7, "009:00:00", "014:00:00"),
(6, 2, "007:00:00", "018:00:00"),
(6, 3, "007:00:00", "018:00:00"),
(6, 4, "007:00:00", "018:00:00"),
(6, 5, "007:00:00", "018:00:00"),
(6, 6, "007:00:00", "018:00:00"),
(6, 7, "007:00:00", "013:00:00"),
(7, 2, "009:00:00", "016:00:00"),
(7, 3, "009:00:00", "016:00:00"),
(7, 4, "009:00:00", "016:00:00"),
(7, 5, "009:00:00", "016:00:00"),
(7, 6, "009:00:00", "016:00:00"),
(8, 2, "008:00:00", "017:00:00"),
(8, 3, "008:00:00", "017:00:00"),
(8, 4, "008:00:00", "017:00:00"),
(8, 5, "008:00:00", "017:00:00"),
(8, 6, "008:00:00", "017:00:00"),
(8, 7, "009:00:00", "014:00:00"),
(9, 2, "007:00:00", "017:00:00"),
(9, 3, "007:00:00", "017:00:00"),
(9, 4, "007:00:00", "017:00:00"),
(9, 5, "007:00:00", "017:00:00"),
(9, 6, "007:00:00", "017:00:00"),
(9, 7, "007:00:00", "014:00:00");

INSERT INTO `instastore`.`Delivery` (StoreId, WeekDay, StartsAt, EndsAt, Capacity) VALUES
(1, 2, "08:00:00", "09:59:59", 10),
(1, 2, "10:00:00", "11:59:59", 10),
(1, 2, "12:00:00", "13:59:59", 10),
(1, 2, "14:00:00", "15:59:59", 10),
(1, 2, "16:00:00", "16:59:59", 5),
(1, 3, "08:00:00", "09:59:59", 10),
(1, 3, "10:00:00", "11:59:59", 10),
(1, 3, "12:00:00", "13:59:59", 10),
(1, 3, "14:00:00", "15:59:59", 10),
(1, 3, "16:00:00", "16:59:59", 5),
(1, 4, "08:00:00", "09:59:59", 10),
(1, 4, "10:00:00", "11:59:59", 10),
(1, 4, "12:00:00", "13:59:59", 10),
(1, 4, "14:00:00", "15:59:59", 10),
(1, 4, "16:00:00", "16:59:59", 5),
(1, 5, "08:00:00", "09:59:59", 10),
(1, 5, "10:00:00", "11:59:59", 10),
(1, 5, "12:00:00", "13:59:59", 10),
(1, 5, "14:00:00", "15:59:59", 10),
(1, 5, "16:00:00", "16:59:59", 5),
(1, 6, "08:00:00", "09:59:59", 10),
(1, 6, "10:00:00", "11:59:59", 10),
(1, 6, "12:00:00", "13:59:59", 10),
(1, 6, "14:00:00", "15:59:59", 10),
(1, 6, "16:00:00", "16:59:59", 5),
(1, 7, "09:00:00", "09:59:59", 5),
(1, 7, "10:00:00", "10:59:59", 5),
(1, 7, "11:00:00", "11:59:59", 5),
(1, 7, "12:00:00", "12:59:59", 5),
(1, 7, "13:00:00", "13:59:59", 5),
(2, 2, "08:00:00", "09:59:59", 10),
(2, 2, "10:00:00", "11:59:59", 10),
(2, 2, "12:00:00", "13:59:59", 10),
(2, 2, "14:00:00", "15:59:59", 10),
(2, 2, "16:00:00", "16:59:59", 5),
(2, 3, "08:00:00", "09:59:59", 10),
(2, 3, "10:00:00", "11:59:59", 10),
(2, 3, "12:00:00", "13:59:59", 10),
(2, 3, "14:00:00", "15:59:59", 10),
(2, 3, "16:00:00", "16:59:59", 5),
(2, 4, "08:00:00", "09:59:59", 10),
(2, 4, "10:00:00", "11:59:59", 10),
(2, 4, "12:00:00", "13:59:59", 10),
(2, 4, "14:00:00", "15:59:59", 10),
(2, 4, "16:00:00", "16:59:59", 5),
(2, 5, "08:00:00", "09:59:59", 10),
(2, 5, "10:00:00", "11:59:59", 10),
(2, 5, "12:00:00", "13:59:59", 10),
(2, 5, "14:00:00", "15:59:59", 10),
(2, 5, "16:00:00", "16:59:59", 5),
(2, 6, "08:00:00", "09:59:59", 10),
(2, 6, "10:00:00", "11:59:59", 10),
(2, 6, "12:00:00", "13:59:59", 10),
(2, 6, "14:00:00", "15:59:59", 10),
(2, 6, "16:00:00", "16:59:59", 5),
(2, 7, "09:00:00", "09:59:59", 5),
(2, 7, "10:00:00", "10:59:59", 5),
(2, 7, "11:00:00", "11:59:59", 5),
(2, 7, "12:00:00", "12:59:59", 5),
(2, 7, "13:00:00", "13:59:59", 5),
(3, 2, "07:00:00", "09:59:59", 20),
(3, 2, "10:00:00", "12:59:59", 20),
(3, 2, "13:00:00", "14:59:59", 20),
(3, 2, "15:00:00", "16:59:59", 20),
(3, 3, "07:00:00", "09:59:59", 20),
(3, 3, "10:00:00", "12:59:59", 20),
(3, 3, "13:00:00", "14:59:59", 20),
(3, 3, "15:00:00", "16:59:59", 20),
(3, 4, "07:00:00", "09:59:59", 20),
(3, 4, "10:00:00", "12:59:59", 20),
(3, 4, "13:00:00", "14:59:59", 20),
(3, 4, "15:00:00", "16:59:59", 20),
(3, 5, "07:00:00", "09:59:59", 20),
(3, 5, "10:00:00", "12:59:59", 20),
(3, 5, "13:00:00", "14:59:59", 20),
(3, 5, "15:00:00", "16:59:59", 20),
(3, 6, "07:00:00", "09:59:59", 20),
(3, 6, "10:00:00", "12:59:59", 20),
(3, 6, "13:00:00", "14:59:59", 20),
(3, 6, "15:00:00", "16:59:59", 20),
(3, 7, "07:00:00", "08:59:59", 10),
(3, 7, "09:00:00", "10:59:59", 10),
(3, 7, "11:00:00", "11:59:59", 10),
(3, 1, "07:00:00", "08:59:59", 10),
(3, 1, "09:00:00", "10:59:59", 10),
(3, 1, "11:00:00", "11:59:59", 10),
(4, 2, "08:00:00", "09:59:59", 10),
(4, 2, "10:00:00", "11:59:59", 10),
(4, 2, "12:00:00", "13:59:59", 10),
(4, 2, "14:00:00", "15:59:59", 10),
(4, 2, "16:00:00", "16:59:59", 5),
(4, 3, "08:00:00", "09:59:59", 10),
(4, 3, "10:00:00", "11:59:59", 10),
(4, 3, "12:00:00", "13:59:59", 10),
(4, 3, "14:00:00", "15:59:59", 10),
(4, 3, "16:00:00", "16:59:59", 5),
(4, 4, "08:00:00", "09:59:59", 10),
(4, 4, "10:00:00", "11:59:59", 10),
(4, 4, "12:00:00", "13:59:59", 10),
(4, 4, "14:00:00", "15:59:59", 10),
(4, 4, "16:00:00", "16:59:59", 5),
(4, 5, "08:00:00", "09:59:59", 10),
(4, 5, "10:00:00", "11:59:59", 10),
(4, 5, "12:00:00", "13:59:59", 10),
(4, 5, "14:00:00", "15:59:59", 10),
(4, 5, "16:00:00", "16:59:59", 5),
(4, 6, "08:00:00", "09:59:59", 10),
(4, 6, "10:00:00", "11:59:59", 10),
(4, 6, "12:00:00", "13:59:59", 10),
(4, 6, "14:00:00", "15:59:59", 10),
(4, 6, "16:00:00", "16:59:59", 5),
(4, 7, "09:00:00", "09:59:59", 5),
(4, 7, "10:00:00", "10:59:59", 5),
(4, 7, "11:00:00", "11:59:59", 5),
(4, 7, "12:00:00", "12:59:59", 5),
(4, 7, "13:00:00", "13:59:59", 5),
(5, 2, "08:00:00", "09:59:59", 10),
(5, 2, "10:00:00", "11:59:59", 10),
(5, 2, "12:00:00", "13:59:59", 10),
(5, 2, "14:00:00", "15:59:59", 10),
(5, 2, "16:00:00", "16:59:59", 5),
(5, 3, "08:00:00", "09:59:59", 10),
(5, 3, "10:00:00", "11:59:59", 10),
(5, 3, "12:00:00", "13:59:59", 10),
(5, 3, "14:00:00", "15:59:59", 10),
(5, 3, "16:00:00", "16:59:59", 5),
(5, 4, "08:00:00", "09:59:59", 10),
(5, 4, "10:00:00", "11:59:59", 10),
(5, 4, "12:00:00", "13:59:59", 10),
(5, 4, "14:00:00", "15:59:59", 10),
(5, 4, "16:00:00", "16:59:59", 5),
(5, 5, "08:00:00", "09:59:59", 10),
(5, 5, "10:00:00", "11:59:59", 10),
(5, 5, "12:00:00", "13:59:59", 10),
(5, 5, "14:00:00", "15:59:59", 10),
(5, 5, "16:00:00", "16:59:59", 5),
(5, 6, "08:00:00", "09:59:59", 10),
(5, 6, "10:00:00", "11:59:59", 10),
(5, 6, "12:00:00", "13:59:59", 10),
(5, 6, "14:00:00", "15:59:59", 10),
(5, 6, "16:00:00", "16:59:59", 5),
(5, 7, "09:00:00", "09:59:59", 5),
(5, 7, "10:00:00", "10:59:59", 5),
(5, 7, "11:00:00", "11:59:59", 5),
(5, 7, "12:00:00", "12:59:59", 5),
(5, 7, "13:00:00", "13:59:59", 5),
(6, 2, "07:00:00", "09:59:59", 10),
(6, 2, "10:00:00", "12:59:59", 10),
(6, 2, "13:00:00", "15:59:59", 10),
(6, 2, "16:00:00", "17:59:59", 10),
(6, 3, "07:00:00", "09:59:59", 10),
(6, 3, "10:00:00", "12:59:59", 10),
(6, 3, "13:00:00", "15:59:59", 10),
(6, 3, "16:00:00", "17:59:59", 10),
(6, 4, "07:00:00", "09:59:59", 10),
(6, 4, "10:00:00", "12:59:59", 10),
(6, 4, "13:00:00", "15:59:59", 10),
(6, 4, "16:00:00", "17:59:59", 10),
(6, 5, "07:00:00", "09:59:59", 10),
(6, 5, "10:00:00", "12:59:59", 10),
(6, 5, "13:00:00", "15:59:59", 10),
(6, 5, "16:00:00", "17:59:59", 10),
(6, 6, "07:00:00", "09:59:59", 10),
(6, 6, "10:00:00", "12:59:59", 10),
(6, 6, "13:00:00", "15:59:59", 10),
(6, 6, "16:00:00", "17:59:59", 10),
(6, 7, "07:00:00", "08:59:59", 5),
(6, 7, "09:00:00", "10:59:59", 5),
(6, 7, "11:00:00", "12:59:59", 5),
(7, 2, "09:00:00", "10:59:59", 20),
(7, 2, "11:00:00", "12:59:59", 20),
(7, 2, "13:00:00", "14:59:59", 20),
(7, 2, "15:00:00", "15:59:59", 10),
(7, 3, "09:00:00", "10:59:59", 20),
(7, 3, "11:00:00", "12:59:59", 20),
(7, 3, "13:00:00", "14:59:59", 20),
(7, 3, "15:00:00", "15:59:59", 10),
(7, 4, "09:00:00", "10:59:59", 20),
(7, 4, "11:00:00", "12:59:59", 20),
(7, 4, "13:00:00", "14:59:59", 20),
(7, 4, "15:00:00", "15:59:59", 10),
(7, 5, "09:00:00", "10:59:59", 20),
(7, 5, "11:00:00", "12:59:59", 20),
(7, 5, "13:00:00", "14:59:59", 20),
(7, 5, "15:00:00", "15:59:59", 10),
(7, 6, "09:00:00", "10:59:59", 20),
(7, 6, "11:00:00", "12:59:59", 20),
(7, 6, "13:00:00", "14:59:59", 20),
(7, 6, "15:00:00", "15:59:59", 10),
(8, 2, "08:00:00", "09:59:59", 10),
(8, 2, "10:00:00", "11:59:59", 10),
(8, 2, "12:00:00", "13:59:59", 10),
(8, 2, "14:00:00", "15:59:59", 10),
(8, 2, "16:00:00", "16:59:59", 5),
(8, 3, "08:00:00", "09:59:59", 10),
(8, 3, "10:00:00", "11:59:59", 10),
(8, 3, "12:00:00", "13:59:59", 10),
(8, 3, "14:00:00", "15:59:59", 10),
(8, 3, "16:00:00", "16:59:59", 5),
(8, 4, "08:00:00", "09:59:59", 10),
(8, 4, "10:00:00", "11:59:59", 10),
(8, 4, "12:00:00", "13:59:59", 10),
(8, 4, "14:00:00", "15:59:59", 10),
(8, 4, "16:00:00", "16:59:59", 5),
(8, 5, "08:00:00", "09:59:59", 10),
(8, 5, "10:00:00", "11:59:59", 10),
(8, 5, "12:00:00", "13:59:59", 10),
(8, 5, "14:00:00", "15:59:59", 10),
(8, 5, "16:00:00", "16:59:59", 5),
(8, 6, "08:00:00", "09:59:59", 10),
(8, 6, "10:00:00", "11:59:59", 10),
(8, 6, "12:00:00", "13:59:59", 10),
(8, 6, "14:00:00", "15:59:59", 10),
(8, 6, "16:00:00", "16:59:59", 5),
(8, 7, "09:00:00", "09:59:59", 5),
(8, 7, "10:00:00", "10:59:59", 5),
(8, 7, "11:00:00", "11:59:59", 5),
(8, 7, "12:00:00", "12:59:59", 5),
(8, 7, "13:00:00", "13:59:59", 5),
(9, 2, "07:00:00", "09:59:59", 10),
(9, 2, "10:00:00", "12:59:59", 10),
(9, 2, "13:00:00", "15:59:59", 10),
(9, 2, "16:00:00", "16:59:59", 10),
(9, 3, "07:00:00", "09:59:59", 10),
(9, 3, "10:00:00", "12:59:59", 10),
(9, 3, "13:00:00", "15:59:59", 10),
(9, 3, "16:00:00", "16:59:59", 10),
(9, 4, "07:00:00", "09:59:59", 10),
(9, 4, "10:00:00", "12:59:59", 10),
(9, 4, "13:00:00", "15:59:59", 10),
(9, 4, "16:00:00", "16:59:59", 10),
(9, 5, "07:00:00", "09:59:59", 10),
(9, 5, "10:00:00", "12:59:59", 10),
(9, 5, "13:00:00", "15:59:59", 10),
(9, 5, "16:00:00", "16:59:59", 10),
(9, 6, "07:00:00", "09:59:59", 10),
(9, 6, "10:00:00", "12:59:59", 10),
(9, 6, "13:00:00", "15:59:59", 10),
(9, 6, "16:00:00", "16:59:59", 10),
(9, 7, "07:00:00", "08:59:59", 5),
(9, 7, "09:00:00", "10:59:59", 5),
(9, 7, "11:00:00", "13:59:59", 5);

INSERT INTO `instastore`.`Order` (DeliveryId, DeliveryDate) VALUES 
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(6, "2021-01-19"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(11, "2021-01-20"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(16, "2021-01-21"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(21, "2021-01-22"),
(26, "2021-01-23"),
(26, "2021-01-23"),
(26, "2021-01-23"),
(26, "2021-01-23"),
(26, "2021-01-23"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(1, "2021-01-25"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(6, "2021-01-26"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(11, "2021-01-27"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(16, "2021-01-28"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(21, "2021-01-29"),
(26, "2021-01-30"),
(26, "2021-01-30"),
(26, "2021-01-30"),
(26, "2021-01-30"),
(26, "2021-01-30"),

(126, "2021-01-19"),
(126, "2021-01-19"),
(126, "2021-01-19"),
(126, "2021-01-19"),
(126, "2021-01-19"),
(131, "2021-01-20"),
(131, "2021-01-20"),
(131, "2021-01-20"),
(131, "2021-01-20"),
(131, "2021-01-20"),
(136, "2021-01-21"),
(136, "2021-01-21"),
(136, "2021-01-21"),
(136, "2021-01-21"),
(136, "2021-01-21"),
(141, "2021-01-22"),
(141, "2021-01-22"),
(141, "2021-01-22"),
(141, "2021-01-22"),
(141, "2021-01-22"),
(146, "2021-01-23"),
(146, "2021-01-23"),
(146, "2021-01-23"),
(146, "2021-01-23"),
(146, "2021-01-23"),
(121, "2021-01-25"),
(121, "2021-01-25"),
(121, "2021-01-25"),
(121, "2021-01-25"),
(121, "2021-01-25"),
(126, "2021-01-26"),
(126, "2021-01-26"),
(126, "2021-01-26"),
(126, "2021-01-26"),
(126, "2021-01-26"),
(131, "2021-01-27"),
(131, "2021-01-27"),
(131, "2021-01-27"),
(131, "2021-01-27"),
(131, "2021-01-27"),
(136, "2021-01-28"),
(136, "2021-01-28"),
(136, "2021-01-28"),
(136, "2021-01-28"),
(136, "2021-01-28"),
(141, "2021-01-29"),
(141, "2021-01-29"),
(141, "2021-01-29"),
(141, "2021-01-29"),
(141, "2021-01-29"),
(146, "2021-01-30"),
(146, "2021-01-30"),
(146, "2021-01-30"),
(146, "2021-01-30"),
(146, "2021-01-30");

DROP FUNCTION IF EXISTS `instastore`.`haversine`;

DELIMITER $$
CREATE FUNCTION `instastore`.`haversine` ( lat1 DECIMAL(8,6),  lng1 DECIMAL(8,6),  lat2 DECIMAL(8,6), lng2 DECIMAL(8,6)) 
RETURNS DECIMAL(30,20)
DETERMINISTIC
BEGIN
    DECLARE R INT;
    DECLARE dLat DECIMAL(30,20);
    DECLARE dLng DECIMAL(30,20);
    DECLARE a1 DECIMAL(30,20);
    DECLARE a2 DECIMAL(30,20);
    DECLARE a DECIMAL(30,20);
    DECLARE c DECIMAL(30,20);
    DECLARE d DECIMAL(30,20);

    SET R = 6371; -- Earth's radius in kilometers
    SET dLat = RADIANS( lat2 ) - RADIANS( lat1 );
    SET dLng = RADIANS( lng2 ) - RADIANS( lng1 );
    SET a1 = SIN( dLat / 2 ) * SIN( dLat / 2 );
    SET a2 = SIN( dLng / 2 ) * SIN( dLng / 2 ) * COS( RADIANS( lat1 )) * COS( RADIANS( lat2 ) );
    SET a = a1 + a2;
    SET c = 2 * ATAN2( SQRT( a ), SQRT( 1 - a ) );
    SET d = R * c;
    RETURN d;
END$$
DELIMITER ;

DROP FUNCTION IF EXISTS `instastore`.`getNextTimeDelivery`;

DELIMITER $$
CREATE FUNCTION `instastore`.`getNextTimeDelivery` ( store INT ) 
RETURNS DATETIME
DETERMINISTIC
BEGIN
	DECLARE CurDate DATE;
    DECLARE Response DATETIME;
    DECLARE Checker TIME;
    DECLARE tempCurDatetime DATETIME;
    DECLARE tempResponse DATETIME;
    
    SET CurDate = CURDATE();
    SET Response = NULL;
    SET Checker = NULL;
    
    WHILE Response IS NULL DO
		SET Checker = (SELECT StartsAt FROM `instastore`.`Delivery`
		LEFT JOIN (SELECT DeliveryId, DeliveryDate, COUNT(*) as Total FROM `instastore`.`Order` WHERE DeliveryDate="2021-01-19" GROUP BY DeliveryId, DeliveryDate) AS Ordered 
		ON ( `Delivery`.DeliveryId = Ordered.DeliveryId )
		WHERE StoreId = store AND WeekDay = DAYOFWEEK(CurDate) AND ( Capacity < Total OR Total IS NULL ) 
		ORDER BY StartsAt ASC 
		LIMIT 1);
	
		SET Response = IF( (CONCAT( CurDate, ' ', Checker ) >= current_timestamp()), CONCAT( CurDate, ' ', Checker ), NULL );
        
        SET CurDate = IF( Response IS NULL, CurDate + INTERVAL 1 DAY, NULL );
	END WHILE;
    
    RETURN Response;
END$$
DELIMITER ;